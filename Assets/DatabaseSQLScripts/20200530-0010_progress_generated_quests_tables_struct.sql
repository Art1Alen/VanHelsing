PRAGMA foreign_keys = off;
BEGIN TRANSACTION;

-- Таблица: active_quest
DROP TABLE IF EXISTS active_quest;
CREATE TABLE active_quest (Id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, QuestId INTEGER NOT NULL, TimeLeft INTEGER NOT NULL DEFAULT (- 1));

-- Таблица: active_quest_objectives
DROP TABLE IF EXISTS active_quest_objectives;
CREATE TABLE active_quest_objectives (Id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, ObjectiveId INTEGER NOT NULL, Value INTEGER NOT NULL DEFAULT (0));

-- Таблица: quest
DROP TABLE IF EXISTS quest;
CREATE TABLE quest (Id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, MinLevel INTEGER DEFAULT (1) NOT NULL, QuestLevel INTEGER DEFAULT (1) NOT NULL, TimeAllowed INTEGER DEFAULT (- 1) NOT NULL, ZoneId INTEGER DEFAULT (1) NOT NULL, RewardExp INTEGER NOT NULL DEFAULT (0), RewardMoney INTEGER NOT NULL DEFAULT (0), StartDialogId INTEGER NOT NULL DEFAULT (0), EndDialogId INTEGER DEFAULT (0) NOT NULL, StartQuestEventType INTEGER NOT NULL DEFAULT (0), EndQuestEventType INTEGER NOT NULL DEFAULT (0), Repeatable INTEGER DEFAULT (0) NOT NULL);

-- Таблица: quest_locale_ru
DROP TABLE IF EXISTS quest_locale_ru;
CREATE TABLE quest_locale_ru (Id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, QuestId INTEGER REFERENCES quest (Id) ON DELETE CASCADE NOT NULL DEFAULT (0), Title TEXT NOT NULL DEFAULT Title, Description TEXT NOT NULL DEFAULT Description);

-- Таблица: quest_objectives
DROP TABLE IF EXISTS quest_objectives;
CREATE TABLE quest_objectives (Id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, QuestId INTEGER REFERENCES quest (Id) ON DELETE CASCADE NOT NULL, Type INTEGER (3) NOT NULL DEFAULT (1), TargetId INTEGER NOT NULL DEFAULT (1), Amount INTEGER NOT NULL DEFAULT (1), IsOptional INTEGER NOT NULL DEFAULT (0));

-- Таблица: quest_objectives_locale_ru
DROP TABLE IF EXISTS quest_objectives_locale_ru;
CREATE TABLE quest_objectives_locale_ru (Id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, ObjectiveId INTEGER REFERENCES quest_objectives (Id) ON DELETE CASCADE NOT NULL, Title TEXT NOT NULL DEFAULT Title);

-- Таблица: quest_poi
DROP TABLE IF EXISTS quest_poi;
CREATE TABLE quest_poi (Id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, QuestId INTEGER REFERENCES quest (Id) NOT NULL, ZoneId INTEGER NOT NULL, X DOUBLE NOT NULL, Y DOUBLE NOT NULL, MarkerType INTEGER (3) NOT NULL DEFAULT (1));

-- Таблица: quest_requirements
DROP TABLE IF EXISTS quest_requirements;
CREATE TABLE quest_requirements (Id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, TargetQuestId INTEGER REFERENCES quest (Id) ON DELETE CASCADE NOT NULL, RequiredQuest INTEGER REFERENCES quest (Id) ON DELETE CASCADE NOT NULL);

-- Таблица: quest_rewards
DROP TABLE IF EXISTS quest_rewards;
CREATE TABLE quest_rewards (Id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, QuestId INTEGER REFERENCES quest (Id) ON DELETE CASCADE NOT NULL, RewardType INTEGER (3) NOT NULL DEFAULT (1), RewardObjectType INTEGER (3) NOT NULL DEFAULT (1), RewardObjectId INTEGER NOT NULL DEFAULT (0), RewardObjectCount INTEGER NOT NULL DEFAULT (1));

COMMIT TRANSACTION;
PRAGMA foreign_keys = on;
